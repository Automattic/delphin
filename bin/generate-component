#!/usr/bin/env node

const fs = require( 'fs' );
const path = require( 'path' );
const camelCase = require( 'lodash/camelcase' );
const upperFirst = require( 'lodash/upperfirst' );
const kebabCase = require( 'lodash/kebabCase' );

const createModule = ( path, externalDependencies, internalDependencies, body ) => {
	const module = [].concat(
		'// External dependencies',
		externalDependencies,
		'',
		'// Internal dependencies',
		internalDependencies,
		'',
		body,
		''
	).join( '\n' );

	fs.writeFileSync( path, module, 'utf8' );
};

const name = process.argv[ 2 ];
const directoryName = kebabCase( name );
const fileName = 'index.js';
const moduleName = upperFirst( camelCase( name ) );

// Generate UI component
const uiComponentDirectory = path.join( 'app', 'components', 'ui', directoryName );
const uiComponentPath = path.join( uiComponentDirectory, fileName );

fs.mkdirSync( path.join( __dirname, '..', uiComponentDirectory ) );

createModule(
	path.join( __dirname, '..', uiComponentPath ),
	[
		"import React, { Component, PropTypes } from 'react';",
		"import withStyles from 'isomorphic-style-loader/lib/withStyles';"
	],
	[
		"import styles from './styles.scss';"
	],
	[
		'class ' + moduleName + ' extends Component {',
		'	render() {',
		'		return (',
		'			<div>Hello world</div>',
		'		);',
		'	}',
		'}',
		'',
		moduleName + '.propTypes = {};',
		'',
		'export default withStyles( styles )( ' + moduleName + ' );'
	]
);

fs.writeFileSync( path.join( __dirname, '..', uiComponentDirectory, 'styles.scss' ), '' );

// Generate container
const containerComponentPath = path.join( 'app', 'components', 'containers', directoryName + '.js' );

createModule(
	path.join( __dirname, '..', containerComponentPath ),
	"import { connect } from 'react-redux';",
	"import " + moduleName + " from '" + uiComponentPath + "';",
	[
		'export default connect()( ' + moduleName + ' );'
	]
);
